name: Publish to PyPI
on:
  workflow_dispatch:
  release:
    types: [created]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Python and uv with caching
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.13" # for reproducibility
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Install optimi
        run: uv sync --group cpu

      - name: Run Tests
        run: pytest -m cpu

  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event_name == 'workflow_dispatch' && 'testpypi' || 'release' }}
      url: ${{ github.event_name == 'workflow_dispatch' && 'https://test.pypi.org/p/torch-optimi' || 'https://pypi.org/p/torch-optimi' }}
    permissions:
      id-token: write
    needs: [test]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Python and uv with caching
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.13" # for reproducibility
          python-version: 3.13
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Install optimi
        run: uv sync --group cpu

      - name: Build
        run: uv build

      - name: Publish to PyPI
        if: github.event_name == 'release'
        run: uv publish

      - name: Publish to Test PyPI
        if: github.event_name == 'workflow_dispatch'
        run: uv publish --publish-url https://test.pypi.org/legacy/